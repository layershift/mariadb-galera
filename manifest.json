{
  "jpsType": "install",
  "application": {
    "name": "MariaDB Galera Cluster (10.2)",
    "id": "mariadb-galera102",
    "categories": [
      "apps/clustered-dbs",
      "apps/clusters"
    ],
    "homepage": "https://mariadb.com/",
    "logo": "http://jps.layershift.com/mariadbgalera/mariadb.png",
    "type": "docker",
    "version": "10.2",
    "description": "MariaDB 10.2 Galera Cluster is a synchronous multi-master cluster for MariaDB. It is available on Linux only, and only supports the XtraDB/InnoDB storage engines.    \nThis installation consists of three MariaDB cluster members in Docker containers as well as HAProxy to connecto from your application to the cluster.",
    "settings": {
      "fields": [
        {
          "type": "string",
          "name": "app_user",
          "caption": "Username",
          "vtype": "alphanum",
          "vtypeText": "Alphanumeric input only.",
          "placeholder": "Applicatinon database user",
          "required": true
        },
        {
          "type": "string",
          "name": "app_pwd",
          "caption": "Password",
          "vtype": "alphanum",
          "vtypeText": "Alphanumeric input only.",
          "placeholder": "Application database password",
          "required": true
        },
        {
          "type": "string",
          "name": "database_name",
          "caption": "Database",
          "vtype": "alphanum",
          "vtypeText": "Alphanumeric input only.",
          "placeholder": "Application database name",
          "required": true
        },
        {
          "type": "string",
          "name": "root_pwd",
          "caption": "Root password",
          "vtype": "alphanum",
          "vtypeText": "Alphanumeric input only.",
          "placeholder": "Root password",
          "required": true
        }
      ]
    },
    "env": {
      "topology": {
        "nodes": [
          {
            "nodeType": "docker",
            "count": 1,
            "fixedCloudlets": 1,
            "flexibleCloudlets": 16,
            "displayName": "Galera Proxy",
            "docker": {
              "nodeMission": "cp",
              "image": "layershift/haproxy:latest"
            }
          },
          {
            "nodeType": "docker",
            "count": 3,
            "fixedCloudlets": 1,
            "flexibleCloudlets": 24,
            "displayName": "MariaDB Galera Cluster",
            "docker": {
              "nodeMission": "sqldb",
              "image": "layershift/mariadb-galera:10.2"
            }
          }
        ]
      }
    },
    "onInstall": {
      "call": [
        "preconfigureMariaDB",
        "configureNodes",
        "startNode0",
        "startNode1",
        "startNode2",
        "configureHAProxy"
      ]
    },
    "procedures": [
      {
        "id": "preconfigureMariaDB",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeMission": "sqldb",
                "user": "root",
                "commands": [
                  "sed -i \"s/NODE1/${nodes.sqldb[0].address}/g\" /etc/sysconfig/iptables",
                  "sed -i \"s/NODE2/${nodes.sqldb[1].address}/g\" /etc/sysconfig/iptables",
                  "sed -i \"s/NODE3/${nodes.sqldb[2].address}/g\" /etc/sysconfig/iptables",
                  "sed -i \"s/NODE4/${nodes.cp[0].address}/g\" /etc/sysconfig/iptables",
                  "systemctl enable iptables.service 2>&1",
                  "systemctl restart iptables.service 2>&1",
                  "systemctl enable mysql",
                  "service mysql start 2>&1",
                  "/usr/bin/mysqladmin -u root password \"${settings.root_pwd}\"",
                  "sed -i \"s/NODE1/${nodes.sqldb[0].address}/g\" /tmp/user.sql",
                  "sed -i \"s/NODE2/${nodes.sqldb[1].address}/g\" /tmp/user.sql",
                  "sed -i \"s/NODE3/${nodes.sqldb[2].address}/g\" /tmp/user.sql",
                  "sed -i \"s/GOESHERE1/${settings.root_pwd}/g\" /tmp/user.sql",
                  "sed -i \"s/GOESHERE2/${settings.app_user}/g\" /tmp/user.sql",
                  "sed -i \"s/GOESHERE3/${settings.app_pwd}/g\" /tmp/user.sql",
                  "sed -i \"s/GOESHERE4/${settings.database_name}/g\" /tmp/user.sql",
                  "sed -i \"s/GOESHERE5/${nodes.cp[0].address}/g\" /tmp/user.sql",
                  "mysql -uroot -p\"${settings.root_pwd}\" < /tmp/user.sql",
                  "service mysql stop 2>&1",
                  "killall -9 mysqld",
                  "sed -i \"s/PASSWORD/${settings.root_pwd}/g\" /etc/my.cnf.d/server.cnf"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "configureNodes",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeId": "${nodes.sqldb[0].id}",
                "user": "root",
                "commands": [
                  "wget http://jps.layershift.com/mariadbgalera/server1.cnf -O /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/PASSWORD/${settings.root_pwd}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNODE/${nodes.sqldb[0].address}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNAME/galera-node-${nodes.sqldb[0].id}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/#wsrep/wsrep/g\" /etc/my.cnf.d/server.cnf",
                  "service mysql stop 2>&1; killall -9 mysqld 2>&1",
                  "echo wsrep_on=ON >> /etc/my.cnf.d/server.cnf",
                  "service mysql start --wsrep-new-cluster 2>&1"
                ]
              },
              {
                "nodeId": "${nodes.sqldb[1].id}",
                "user": "root",
                "commands": [
                  "sed -i \"s/NODE1,NODE2,NODE3/${nodes.sqldb[0].address}:4567,${nodes.sqldb[1].address}:4567,${nodes.sqldb[2].address}:4567/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNODE/${nodes.sqldb[1].address}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNAME/galera-node-${nodes.sqldb[1].id}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/#wsrep/wsrep/g\" /etc/my.cnf.d/server.cnf"
                ]
              },
              {
                "nodeId": "${nodes.sqldb[2].id}",
                "user": "root",
                "commands": [
                  "sed -i \"s/NODE1,NODE2,NODE3/${nodes.sqldb[0].address}:4567,${nodes.sqldb[1].address}:4567,${nodes.sqldb[2].address}:4567/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNODE/${nodes.sqldb[2].address}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNAME/galera-node-${nodes.sqldb[2].id}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/#wsrep/wsrep/g\" /etc/my.cnf.d/server.cnf"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "startNode0",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeId": "${nodes.sqldb[0].id}",
                "user": "root",
                "commands": [
                  "wget http://jps.layershift.com/mariadbgalera/server2.cnf -O /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/PASSWORD/${settings.root_pwd}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNODE/${nodes.sqldb[0].address}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/THISNAME/galera-node-${nodes.sqldb[0].id}/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/NODE1,NODE2,NODE3/${nodes.sqldb[0].address}:4567,${nodes.sqldb[1].address}:4567,${nodes.sqldb[2].address}:4567/g\" /etc/my.cnf.d/server.cnf",
                  "sed -i \"s/#wsrep/wsrep/g\" /etc/my.cnf.d/server.cnf",
                  "echo wsrep_on=ON >> /etc/my.cnf.d/server.cnf"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "startNode1",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeId": "${nodes.sqldb[1].id}",
                "user": "root",
                "commands": [
                  "echo wsrep_on=ON >> /etc/my.cnf.d/server.cnf",
                  "service mysql stop 2>&1; killall -9 mysqld 2>&1; service mysql start 2>&1"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "startNode2",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeId": "${nodes.sqldb[2].id}",
                "user": "root",
                "commands": [
                  "echo wsrep_on=ON >> /etc/my.cnf.d/server.cnf",
                  "service mysql stop 2>&1; killall -9 mysqld 2>&1; service mysql start 2>&1"
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "configureHAProxy",
        "onCall": [
          {
            "executeShellCommands": [
              {
                "nodeId": "${nodes.cp[0].id}",
                "user": "root",
                "commands": [
                  "sed -i \"s/HAPIP/${nodes.cp[0].address}/g\" /etc/haproxy/haproxy.cfg",
                  "sed -i \"s/HAPASS/${nodes.cp[0].password}/g\" /etc/haproxy/haproxy.cfg",
                  "sed -i \"s/HOST1_IP/${nodes.sqldb[0].address}/g\" /etc/haproxy/haproxy.cfg",
                  "sed -i \"s/HOST2_IP/${nodes.sqldb[1].address}/g\" /etc/haproxy/haproxy.cfg",
                  "sed -i \"s/HOST3_IP/${nodes.sqldb[2].address}/g\" /etc/haproxy/haproxy.cfg",
                  "sed -i \"s/HAPASS/${nodes.cp[0].password}/g\" /etc/haproxy/scripts/alert.py",
                  "sed -i \"s/EMAIL_ADDRESS/${user.email}/g\" /etc/haproxy/scripts/alert.py",
                  "/bin/systemctl daemon-reload",
                  "/bin/systemctl restart haproxy.service",
                  "/bin/systemctl restart supervisord.service"
                ]
              }
            ]
          }
        ]
      }
    ],
    "success": {
      "text": "Your MariaDB Galera Cluster has been deployed.\n\nYou can access the docker containers from our **[SSH Gateway](http://kb.layershift.com/jelastic-ssh-access)**.\n\nRoot password and connection details have been emailed to you.\n\nMore about MariaDB Galera cluster: [https://mariadb.com/kb/en/mariadb/what-is-mariadb-galera-cluster/](https://mariadb.com/kb/en/mariadb/what-is-mariadb-galera-cluster/).\nDocker on Jelastic: [https://jelastic.com/docker/](https://jelastic.com/docker/).\"\n",
      "email": "Your MariaDB Galera Cluster has been deployed.\n\nYou can access the docker containers from our **[SSH Gateway](http://kb.layershift.com/jelastic-ssh-access)**.\n\nDetails:\n    \n* **MySQL root password is**: `${settings.root_pwd}`\n* **Database user**: `${settings.app_user}`\n* **Database user password**: `${settings.app_pwd}`\n* **Application Database**: `${settings.database_name}`\n\n* HAProxy IP: **${nodes.cp[0].address}**\n\nEntry point for your application is [HAProxy](http://www.haproxy.org/) instance with ${nodes.cp[0].address} IP address - you should point your application to that IP when configuring your database.\n\nMore about MariaDB Galera cluster: [https://mariadb.com/kb/en/mariadb/what-is-mariadb-galera-cluster/](https://mariadb.com/kb/en/mariadb/what-is-mariadb-galera-cluster/).\n\nDocker on Jelastic: [https://jelastic.com/docker/](https://jelastic.com/docker/)."
    }
  }
}
